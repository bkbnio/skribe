name: Publish to Gradle Plugin Repository
on:
  release:
    types:
      - prereleased
      - released
env:
  ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SONATYPE_SIGNING_KEY }}
  ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SONATYPE_SIGNING_PASSWORD }}
jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache
          
          REPO=${{ github.repository }}
          BRANCH="refs/tags/v0.1.7"
          
          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )
          
          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish:
    runs-on: ubuntu-latest
    needs: cleanup
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Publish to Maven Central
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper
          arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository
          properties: |
            release=true
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USER }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
      - name: Publish Plugins to Gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper
          arguments: publishPlugins
          properties: |
            releasePlugin=true
            gradle.publish.key=$GRADLE_PUBLISH_KEY
            gradle.publish.secret=$GRADLE_PUBLISH_SECRET
            org.gradle.vfs.watch=false
            org.gradle.vfs.verbose=false
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}